{"ast":null,"code":"var _jsxFileName = \"/Users/ufengch/Desktop/Projects/homematcher/src/Components/CommentBox/CommentBox.js\";\nimport React from \"react\";\nimport { FormControl, TextField, FormHelperText, Button, Grid, Paper, Avatar, Divider } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\"; // class Comment extends React.Component {\n//   render() {\n//     const commentStyle = {\n//       content: {\n//         textAlign: \"left\",\n//       },\n//       time: {\n//         color: \"grey\",\n//         textAlign: \"left\",\n//       },\n//       divider: {\n//         margin: \"20px\",\n//       },\n//     };\n//     return (\n//       <div>\n//         <Grid container wrap=\"nowrap\" spacing={2}>\n//           <Grid item>\n//             <Avatar alt={this.props.author} src=\"\" />\n//           </Grid>\n//           <Grid justifyContent=\"left\" item xs zeroMinWidth>\n//             <h4>{this.props.author}</h4>\n//             <p style={commentStyle.content}>{this.props.content}</p>\n//           </Grid>\n//         </Grid>\n//         <Divider\n//           variant=\"fullWidth\"\n//           className=\"divider\"\n//           style={commentStyle.divider}\n//         />\n//       </div>\n//     );\n//   }\n// }\n//make Comment a functional component\n\nconst useStyles = makeStyles({\n  content: {\n    textAlign: \"left\"\n  },\n  time: {\n    color: \"grey\",\n    textAlign: \"left\"\n  },\n  divider: {\n    margin: \"20px\"\n  }\n});\n\nconst Comment = ({\n  author,\n  content\n}) => React.createElement(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 66\n  },\n  __self: this\n}, React.createElement(Grid, {\n  container: true,\n  wrap: \"nowrap\",\n  spacing: 2,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 67\n  },\n  __self: this\n}, React.createElement(Grid, {\n  justifyContent: \"left\",\n  item: true,\n  xs: true,\n  zeroMinWidth: true,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 68\n  },\n  __self: this\n}, React.createElement(\"h4\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 69\n  },\n  __self: this\n}, author), React.createElement(\"p\", {\n  className: useStyles.content,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 70\n  },\n  __self: this\n}, content))), React.createElement(Divider, {\n  variant: \"fullWidth\",\n  className: \"divider\",\n  className: useStyles.divider,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 73\n  },\n  __self: this\n}));\n\nclass CommentForm extends React.Component {\n  handleSubmit(event) {\n    event.preventDefault();\n    let author = this._author;\n    let content = this._content;\n    this.props.addComment(author.value, content.value);\n  }\n\n  render() {\n    return React.createElement(Grid, {\n      container: true,\n      spacing: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(FormControl, {\n      color: \"primary\",\n      fullWidth: \"true\",\n      className: \"ml-2 mr-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      id: \"outlined-basic\",\n      label: \"Name\",\n      variant: \"outlined\",\n      className: \"mb-2\",\n      inputRef: input => this._author = input,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      id: \"outlined-basic\",\n      label: \"Add a comment\",\n      variant: \"outlined\",\n      multiline: true,\n      rowsMax: 6,\n      rows: 4,\n      inputRef: textField => this._content = textField,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }), React.createElement(FormHelperText, {\n      id: \"my-helper-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, \"We'll never share your personal information.\"), React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      type: \"submit\",\n      onClick: this.handleSubmit.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, \"SUBMIT\")));\n  }\n\n}\n\nexport default class CommentBox extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      comments: [{\n        id: 1,\n        author: \"Fiona\",\n        content: \"A review is an evaluation of a publication, service, or company such as a movie, video game, musical composition, book; a piece of hardware like a car, home appliance, or computer; or an event or performance, such as a live music concert, play, musical theater show, dance show, or art exhibition.\"\n      }, {\n        id: 2,\n        author: \"Dan\",\n        content: \"A review is an evaluation of a publication, service, or company such as a movie, video game, musical composition, book; a piece of hardware like a car, home appliance, or computer; or an event or performance, such as a live music concert, play, musical theater show, dance show, or art exhibition.\"\n      }]\n    };\n  }\n\n  getComments() {\n    return this.state.comments.map(comment => {\n      return React.createElement(Comment, {\n        key: comment.id,\n        author: comment.author,\n        content: comment.content,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      });\n    });\n  }\n\n  addComment(author, content) {\n    const comment = {\n      id: this.state.comments.length + 1,\n      author: author,\n      content: content\n    };\n    this.setState({\n      comments: this.state.comments.concat([comment])\n    });\n  }\n\n  render() {\n    const commentListStyle = {\n      div: {\n        padding: \"14px\"\n      },\n      paper: {\n        padding: \"40px 20px\"\n      }\n    };\n    return React.createElement(\"div\", {\n      style: commentListStyle.div,\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }, \"Comments\"), React.createElement(CommentForm, {\n      addComment: this.addComment.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }), React.createElement(Paper, {\n      style: commentListStyle.paper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, this.getComments()));\n  }\n\n}","map":{"version":3,"sources":["/Users/ufengch/Desktop/Projects/homematcher/src/Components/CommentBox/CommentBox.js"],"names":["React","FormControl","TextField","FormHelperText","Button","Grid","Paper","Avatar","Divider","makeStyles","useStyles","content","textAlign","time","color","divider","margin","Comment","author","CommentForm","Component","handleSubmit","event","preventDefault","_author","_content","props","addComment","value","render","input","textField","bind","CommentBox","constructor","state","comments","id","getComments","map","comment","length","setState","concat","commentListStyle","div","padding","paper"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {\n  FormControl,\n  TextField,\n  FormHelperText,\n  Button,\n  Grid,\n  Paper,\n  Avatar,\n  Divider,\n} from \"@material-ui/core\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\n\n// class Comment extends React.Component {\n//   render() {\n//     const commentStyle = {\n//       content: {\n//         textAlign: \"left\",\n//       },\n//       time: {\n//         color: \"grey\",\n//         textAlign: \"left\",\n//       },\n//       divider: {\n//         margin: \"20px\",\n//       },\n//     };\n\n//     return (\n//       <div>\n//         <Grid container wrap=\"nowrap\" spacing={2}>\n//           <Grid item>\n//             <Avatar alt={this.props.author} src=\"\" />\n//           </Grid>\n//           <Grid justifyContent=\"left\" item xs zeroMinWidth>\n//             <h4>{this.props.author}</h4>\n//             <p style={commentStyle.content}>{this.props.content}</p>\n//           </Grid>\n//         </Grid>\n//         <Divider\n//           variant=\"fullWidth\"\n//           className=\"divider\"\n//           style={commentStyle.divider}\n//         />\n//       </div>\n//     );\n//   }\n// }\n\n//make Comment a functional component\nconst useStyles = makeStyles({\n  content: {\n        textAlign: \"left\",\n      },\n      time: {\n        color: \"grey\",\n        textAlign: \"left\",\n      },\n      divider: {\n        margin: \"20px\",\n      }\n});\n      \nconst Comment = ({ author, content }) => (\n  <div>\n    <Grid container wrap=\"nowrap\" spacing={2}>\n      <Grid justifyContent=\"left\" item xs zeroMinWidth>\n        <h4>{author}</h4>\n        <p className={useStyles.content}>{content}</p>\n      </Grid>\n    </Grid>\n    <Divider\n      variant=\"fullWidth\"\n      className=\"divider\"\n      className={useStyles.divider}\n    />\n  </div>\n);\n\n\n\nclass CommentForm extends React.Component {\n  handleSubmit(event) {\n    event.preventDefault();\n    let author = this._author;\n    let content = this._content;\n    this.props.addComment(author.value, content.value);\n  }\n\n  render() {\n    return (\n      <Grid container spacing={2}>\n        <FormControl color=\"primary\" fullWidth=\"true\" className=\"ml-2 mr-2\">\n          <TextField\n            id=\"outlined-basic\"\n            label=\"Name\"\n            variant=\"outlined\"\n            className=\"mb-2\"\n            inputRef={(input) => (this._author = input)}\n          />\n          <TextField\n            id=\"outlined-basic\"\n            label=\"Add a comment\"\n            variant=\"outlined\"\n            multiline\n            rowsMax={6}\n            rows={4}\n            inputRef={(textField) => (this._content = textField)}\n          />\n          <FormHelperText id=\"my-helper-text\">\n            We'll never share your personal information.\n          </FormHelperText>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            type=\"submit\"\n            onClick={this.handleSubmit.bind(this)}\n          >\n            SUBMIT\n          </Button>\n        </FormControl>\n      </Grid>\n    );\n  }\n}\n\nexport default class CommentBox extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      comments: [\n        {\n          id: 1,\n          author: \"Fiona\",\n          content:\n            \"A review is an evaluation of a publication, service, or company such as a movie, video game, musical composition, book; a piece of hardware like a car, home appliance, or computer; or an event or performance, such as a live music concert, play, musical theater show, dance show, or art exhibition.\",\n        },\n        {\n          id: 2,\n          author: \"Dan\",\n          content:\n            \"A review is an evaluation of a publication, service, or company such as a movie, video game, musical composition, book; a piece of hardware like a car, home appliance, or computer; or an event or performance, such as a live music concert, play, musical theater show, dance show, or art exhibition.\",\n        },\n      ],\n    };\n  }\n\n  getComments() {\n    return this.state.comments.map((comment) => {\n      return (\n        <Comment\n          key={comment.id}\n          author={comment.author}\n          content={comment.content}\n        />\n      );\n    });\n  }\n\n  addComment(author, content) {\n    const comment = {\n      id: this.state.comments.length + 1,\n      author: author,\n      content: content,\n    };\n    this.setState({\n      comments: this.state.comments.concat([comment]),\n    });\n  }\n\n  render() {\n    const commentListStyle = {\n      div: {\n        padding: \"14px\",\n      },\n      paper: {\n        padding: \"40px 20px\",\n      },\n    };\n    return (\n      <div style={commentListStyle.div} className=\"App\">\n        <h1>Comments</h1>\n        <CommentForm addComment={this.addComment.bind(this)} />\n        <Paper style={commentListStyle.paper}>{this.getComments()}</Paper>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}