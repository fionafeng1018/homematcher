{"ast":null,"code":"var _jsxFileName = \"/Users/ufengch/Desktop/Projects/homematcher/src/Components/CommentBox/CommentBox.js\";\nimport React from 'react';\nimport { FormControl, TextField, FormHelperText, Button, Grid, Paper, Avatar, Divider } from \"@material-ui/core\";\n\nclass Comment extends React.Component {\n  render() {\n    const commentStyle = {\n      content: {\n        textAlign: \"left\"\n      },\n      time: {\n        color: \"grey\",\n        textAlign: \"left\"\n      },\n      divider: {\n        margin: \"20px\"\n      }\n    };\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      wrap: \"nowrap\",\n      spacing: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, React.createElement(Avatar, {\n      alt: this.props.author,\n      src: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      justifyContent: \"left\",\n      item: true,\n      xs: true,\n      zeroMinWidth: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, this.props.author), React.createElement(\"p\", {\n      style: commentStyle.content,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, this.props.content))), React.createElement(Divider, {\n      variant: \"fullWidth\",\n      className: \"divider\",\n      style: commentStyle.divider,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }));\n  }\n\n}\n\nclass CommentForm extends React.Component {\n  handleSubmit(event) {\n    event.preventDefault();\n    let author = this._author;\n    let content = this._content;\n    this.props.addComment(author.value, content.value);\n  }\n\n  render() {\n    return React.createElement(Grid, {\n      container: true,\n      spacing: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(FormControl, {\n      color: \"primary\",\n      fullWidth: \"true\",\n      className: \"ml-2 mr-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      id: \"outlined-basic\",\n      label: \"Name\",\n      variant: \"outlined\",\n      className: \"mb-2\",\n      inputRef: input => this._author = input,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      id: \"outlined-basic\",\n      label: \"Add a comment\",\n      variant: \"outlined\",\n      multiline: true,\n      rowsMax: 6,\n      rows: 4,\n      inputRef: textField => this._content = textField,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }), React.createElement(FormHelperText, {\n      id: \"my-helper-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, \"We'll never share your personal information.\"), React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      type: \"submit\",\n      onClick: this.handleSubmit.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, \"SUBMIT\")));\n  }\n\n}\n\nexport default class CommentBox extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      comments: [{\n        id: 1,\n        author: \"Fiona\",\n        content: \"A review is an evaluation of a publication, service, or company such as a movie, video game, musical composition, book; a piece of hardware like a car, home appliance, or computer; or an event or performance, such as a live music concert, play, musical theater show, dance show, or art exhibition.\"\n      }, {\n        id: 2,\n        author: \"Dan\",\n        content: \"A review is an evaluation of a publication, service, or company such as a movie, video game, musical composition, book; a piece of hardware like a car, home appliance, or computer; or an event or performance, such as a live music concert, play, musical theater show, dance show, or art exhibition.\"\n      }]\n    };\n  }\n\n  getComments() {\n    return this.state.comments.map(comment => {\n      return React.createElement(Comment, {\n        key: comment.id,\n        author: comment.author,\n        content: comment.content,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      });\n    });\n  }\n\n  addComment(author, content) {\n    const comment = {\n      id: this.state.comments.length + 1,\n      author: author,\n      content: content\n    }; // const newCommentList = this.state.comments.push(comment);\n    // this.setState({ comments : newCommentList});\n\n    this.setState({\n      comments: this.state.comments.concat([comment])\n    });\n    console.log(this.state.comments);\n  }\n\n  render() {\n    const commentListStyle = {\n      div: {\n        padding: \"14px\"\n      },\n      paper: {\n        padding: \"40px 20px\"\n      }\n    };\n    return React.createElement(\"div\", {\n      style: commentListStyle.div,\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, \"Comments\"), React.createElement(CommentForm, {\n      addComment: this.addComment.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }), React.createElement(Paper, {\n      style: commentListStyle.paper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, this.getComments()));\n  }\n\n}","map":{"version":3,"sources":["/Users/ufengch/Desktop/Projects/homematcher/src/Components/CommentBox/CommentBox.js"],"names":["React","FormControl","TextField","FormHelperText","Button","Grid","Paper","Avatar","Divider","Comment","Component","render","commentStyle","content","textAlign","time","color","divider","margin","props","author","CommentForm","handleSubmit","event","preventDefault","_author","_content","addComment","value","input","textField","bind","CommentBox","constructor","state","comments","id","getComments","map","comment","length","setState","concat","console","log","commentListStyle","div","padding","paper"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {FormControl,TextField,FormHelperText,Button,Grid,Paper,Avatar, Divider} from \"@material-ui/core\";\n\nclass Comment extends React.Component {\n  render() {\n\n    const commentStyle = {\n      content: {\n        textAlign: \"left\",\n      },\n      time: {\n        color: \"grey\",\n        textAlign: \"left\"\n      },\n      divider: {\n        margin: \"20px\"\n      }\n\n    };\n\n    return (\n      <div>\n        <Grid container wrap=\"nowrap\" spacing={2}>\n          <Grid item>\n            <Avatar alt={this.props.author} src=\"\" />\n          </Grid>\n          <Grid justifyContent=\"left\" item xs zeroMinWidth>\n            <h4>{this.props.author}</h4>\n            <p style={commentStyle.content}>{this.props.content}</p>\n          </Grid>\n        </Grid>\n        <Divider variant=\"fullWidth\" className=\"divider\" style={commentStyle.divider} />\n      </div>\n    );\n  }\n}\n\nclass CommentForm extends React.Component{\n\n    handleSubmit(event){\n        event.preventDefault();\n        let author = this._author;\n        let content = this._content;\n        this.props.addComment(author.value,content.value);\n    }\n\n    render(){\n        return (\n          <Grid container spacing={2}>\n            <FormControl color=\"primary\" fullWidth=\"true\" className=\"ml-2 mr-2\">\n              <TextField\n                id=\"outlined-basic\"\n                label=\"Name\"\n                variant=\"outlined\"\n                className=\"mb-2\"\n                inputRef = {\n                  (input) => this._author = input\n                }\n              />\n              <TextField\n                id=\"outlined-basic\"\n                label=\"Add a comment\"\n                variant=\"outlined\"\n                multiline\n                rowsMax={6}\n                rows={4}\n                inputRef = {\n                  (textField) => this._content = textField\n                }\n              />\n              <FormHelperText id=\"my-helper-text\">\n                We'll never share your personal information.\n              </FormHelperText>\n              <Button variant=\"contained\" color=\"primary\" type=\"submit\" onClick={this.handleSubmit.bind(this)}>\n                SUBMIT\n              </Button>\n            </FormControl>\n          </Grid>\n        );\n    }\n}\n\nexport default class CommentBox extends React.Component{\n    constructor(){\n        super();\n\n        this.state ={\n            comments:[\n                 {\n                     id: 1,\n                     author: \"Fiona\",\n                     content: \"A review is an evaluation of a publication, service, or company such as a movie, video game, musical composition, book; a piece of hardware like a car, home appliance, or computer; or an event or performance, such as a live music concert, play, musical theater show, dance show, or art exhibition.\",\n                 }, {\n                     id: 2,\n                     author: \"Dan\",\n                     content: \"A review is an evaluation of a publication, service, or company such as a movie, video game, musical composition, book; a piece of hardware like a car, home appliance, or computer; or an event or performance, such as a live music concert, play, musical theater show, dance show, or art exhibition.\",\n                 }\n            ]\n        };\n    }\n\n    getComments(){\n        return this.state.comments.map((comment)=>{\n            return <Comment key={comment.id} author={comment.author} content={comment.content} />\n            });\n    }\n\n    addComment(author, content){\n        const comment={\n            id: this.state.comments.length+1,\n            author: author,\n            content: content\n        };\n        // const newCommentList = this.state.comments.push(comment);\n        // this.setState({ comments : newCommentList});\n        this.setState({\n          comments: this.state.comments.concat([comment])\n        });\n        console.log(this.state.comments);\n    }\n\n   render() {\n        const commentListStyle = {\n          div: {\n            padding: \"14px\",\n          },\n          paper: {\n            padding: \"40px 20px\"\n          },\n        };\n        return (\n            <div style={commentListStyle.div} className=\"App\">\n            <h1>Comments</h1>\n            <CommentForm addComment={this.addComment.bind(this)}/>\n            <Paper style={commentListStyle.paper}>\n              {this.getComments()}\n            </Paper>\n          </div>\n        );\n    }\n}\n\n"]},"metadata":{},"sourceType":"module"}