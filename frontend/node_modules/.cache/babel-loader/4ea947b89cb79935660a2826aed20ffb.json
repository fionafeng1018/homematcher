{"ast":null,"code":"var _jsxFileName = \"/Users/ufengch/Desktop/Projects/homematcher/src/Components/CommentBox/CommentBox.js\";\nimport React, { useState } from \"react\";\nimport { FormControl, TextField, FormHelperText, Button, Grid, Paper, Divider } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\"; //make Comment a functional component\n\nconst useStyles = makeStyles({\n  content: {\n    textAlign: \"left\",\n    paddingLeft: \"2rem\"\n  },\n  time: {\n    color: \"grey\",\n    textAlign: \"left\"\n  },\n  divider: {\n    margin: \"20px\"\n  },\n  paper: {\n    padding: \"40px 20px\"\n  }\n});\n\nconst Comment = ({\n  author,\n  content\n}) => React.createElement(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 25\n  },\n  __self: this\n}, React.createElement(Grid, {\n  container: true,\n  wrap: \"nowrap\",\n  spacing: 2,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 26\n  },\n  __self: this\n}, React.createElement(Grid, {\n  justifyContent: \"left\",\n  item: true,\n  xs: true,\n  zeroMinWidth: true,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 27\n  },\n  __self: this\n}, React.createElement(\"h4\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 28\n  },\n  __self: this\n}, author), React.createElement(\"p\", {\n  className: useStyles().content,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 29\n  },\n  __self: this\n}, content))), React.createElement(Divider, {\n  variant: \"fullWidth\",\n  className: \"divider\",\n  className: useStyles().divider,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 32\n  },\n  __self: this\n})); //create a useInput hook\n\n\nconst useInput = initialValue => {\n  const [value, setValue] = useState(initialValue);\n  return {\n    value,\n    setValue,\n    reset: () => setValue(\"\"),\n    bind: {\n      value,\n      onChange: event => {\n        setValue(event.target.value);\n      }\n    }\n  };\n}; //make CommentForm a functional component\n\n\nconst CommentForm = () => {\n  const {\n    value: author,\n    bind: bindAuthor,\n    reset: resetAuthor\n  } = useInput('');\n  const {\n    value: content,\n    bind: bindContent,\n    reset: resetContent\n  } = useInput('');\n\n  const handleSubmit = event => {\n    event.preventDefault(); //addComment(author, content);\n\n    resetAuthor();\n    resetContent();\n  };\n\n  return React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(FormControl, {\n    color: \"primary\",\n    fullWidth: \"true\",\n    className: \"ml-2 mr-2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, React.createElement(TextField, Object.assign({\n    id: \"outlined-basic\",\n    label: \"Name\",\n    variant: \"outlined\",\n    className: \"mb-2\"\n  }, bindAuthor, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  })), React.createElement(TextField, Object.assign({\n    id: \"outlined-basic\",\n    label: \"Add a comment\",\n    variant: \"outlined\",\n    multiline: true,\n    rowsMax: 6,\n    rows: 4\n  }, bindContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  })), React.createElement(FormHelperText, {\n    id: \"my-helper-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, \" We'll never share your personal information. \"), React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    type: \"submit\",\n    onClick: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, \" SUBMIT\")));\n}; //make CommentBox a functional componet\n\n\nconst CommentBox = () => {\n  const [comments, setComments] = useState([{\n    id: 1,\n    author: \"Fiona\",\n    content: \"A review is an evaluation of a publication, service, or company such as a movie, video game, musical composition, book; a piece of hardware like a car, home appliance, or computer; or an event or performance, such as a live music concert, play, musical theater show, dance show, or art exhibition.\"\n  }, {\n    id: 2,\n    author: \"Dan\",\n    content: \"A review is an evaluation of a publication, service, or company such as a movie, video game, musical composition, book; a piece of hardware like a car, home appliance, or computer; or an event or performance, such as a live music concert, play, musical theater show, dance show, or art exhibition.\"\n  }]);\n\n  const addComment = (author, content) => {\n    const newComments = [...comments, {\n      id: comments.length + 1,\n      author,\n      content\n    }];\n    setComments(newComments);\n  };\n\n  return React.createElement(\"div\", {\n    className: \"App ml-2 mr-2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, \"Comments\"), React.createElement(CommentForm, {\n    addComment: addComment,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }), React.createElement(Paper, {\n    className: useStyles.paper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, comments.map(comment => {\n    return React.createElement(Comment, {\n      key: comment.id,\n      author: comment.author,\n      content: comment.content,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    });\n  })));\n};\n\nexport default CommentBox;","map":{"version":3,"sources":["/Users/ufengch/Desktop/Projects/homematcher/src/Components/CommentBox/CommentBox.js"],"names":["React","useState","FormControl","TextField","FormHelperText","Button","Grid","Paper","Divider","makeStyles","useStyles","content","textAlign","paddingLeft","time","color","divider","margin","paper","padding","Comment","author","useInput","initialValue","value","setValue","reset","bind","onChange","event","target","CommentForm","bindAuthor","resetAuthor","bindContent","resetContent","handleSubmit","preventDefault","CommentBox","comments","setComments","id","addComment","newComments","length","map","comment"],"mappings":"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","sourcesContent":["import React, {useState} from \"react\";\nimport {FormControl,TextField,FormHelperText,Button,Grid,Paper,Divider,} from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\n\n//make Comment a functional component\nconst useStyles = makeStyles({\n  content: {\n    textAlign: \"left\",\n    paddingLeft: \"2rem\"\n  },\n  time: {\n    color: \"grey\",\n    textAlign: \"left\",\n  },\n  divider: {\n    margin: \"20px\",\n  },\n  paper: {\n    padding: \"40px 20px\",\n  }\n});\n      \nconst Comment = ({ author, content }) => (\n  <div>\n    <Grid container wrap=\"nowrap\" spacing={2}>\n      <Grid justifyContent=\"left\" item xs zeroMinWidth>\n        <h4>{author}</h4>\n        <p className={useStyles().content}>{content}</p>\n      </Grid>\n    </Grid>\n    <Divider\n      variant=\"fullWidth\"\n      className=\"divider\"\n      className={useStyles().divider}\n    />\n  </div>\n);\n\n//create a useInput hook\nconst useInput = initialValue =>{\n  const [value, setValue] = useState(initialValue);\n\n  return {\n    value,\n    setValue,\n    reset: () => setValue(\"\"),\n    bind: {\n      value,\n      onChange: (event) => {\n        setValue(event.target.value);\n      },\n    },\n  };\n}\n\n//make CommentForm a functional component\nconst CommentForm = ()=>{\n\n  const { value:author, bind:bindAuthor, reset:resetAuthor } = useInput('');\n  const { value: content, bind: bindContent, reset: resetContent } = useInput('');\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    //addComment(author, content);\n    resetAuthor();\n    resetContent();\n\n  }\n\n  return (\n    <Grid container spacing={2}>\n      <FormControl color=\"primary\" fullWidth=\"true\" className=\"ml-2 mr-2\">\n        <TextField id=\"outlined-basic\" label=\"Name\" variant=\"outlined\" className=\"mb-2\" {...bindAuthor}/>\n        <TextField id=\"outlined-basic\" label=\"Add a comment\" variant=\"outlined\" multiline rowsMax={6} rows={4} {...bindContent}  />\n        <FormHelperText id=\"my-helper-text\"> We'll never share your personal information. </FormHelperText>\n        <Button variant=\"contained\" color=\"primary\" type=\"submit\" onClick={handleSubmit}> SUBMIT</Button>\n      </FormControl>\n    </Grid>\n  );\n}\n\n//make CommentBox a functional componet\nconst CommentBox = ()=>{\n  const [comments, setComments] = useState([\n    {\n      id: 1,\n      author: \"Fiona\",\n      content:\n        \"A review is an evaluation of a publication, service, or company such as a movie, video game, musical composition, book; a piece of hardware like a car, home appliance, or computer; or an event or performance, such as a live music concert, play, musical theater show, dance show, or art exhibition.\",\n    },\n    {\n      id: 2,\n      author: \"Dan\",\n      content:\n        \"A review is an evaluation of a publication, service, or company such as a movie, video game, musical composition, book; a piece of hardware like a car, home appliance, or computer; or an event or performance, such as a live music concert, play, musical theater show, dance show, or art exhibition.\",\n    }\n  ]);\n\n  const addComment = (author, content) =>{\n    const newComments = [...comments, {id:comments.length+1,author, content}];\n    setComments(newComments);\n  }\n\n  return (\n    <div className=\"App ml-2 mr-2\">\n      <h1>Comments</h1>\n      <CommentForm addComment={addComment} />\n      <Paper className={useStyles.paper}>\n        {comments.map((comment) => {\n          return (\n            <Comment\n              key={comment.id}\n              author={comment.author}\n              content={comment.content}\n            />\n          );\n        })}\n      </Paper>\n    </div>\n  );\n}\n\nexport default CommentBox;\n\n\n"]},"metadata":{},"sourceType":"module"}