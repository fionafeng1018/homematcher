{"ast":null,"code":"var _jsxFileName = \"/Users/ufengch/Desktop/Projects/homematcher/frontend/src/Components/CommentBox/CommentBox.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { FormControl, TextField, FormHelperText, Button, Grid, Paper, Divider } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport axios from 'axios'; //make Comment a functional component\n\nconst useStyles = makeStyles({\n  content: {\n    textAlign: \"left\",\n    paddingLeft: \"2rem\"\n  },\n  author: {\n    paddingLeft: \"2rem\"\n  },\n  time: {\n    color: \"grey\",\n    textAlign: \"left\",\n    paddingLeft: \"2rem\"\n  },\n  divider: {\n    margin: \"20px\"\n  },\n  paper: {\n    padding: \"40px 20px\"\n  }\n});\n\nconst Comment = ({\n  author,\n  content,\n  date\n}) => React.createElement(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 30\n  },\n  __self: this\n}, React.createElement(Grid, {\n  container: true,\n  wrap: \"nowrap\",\n  spacing: 2,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 31\n  },\n  __self: this\n}, React.createElement(Grid, {\n  justifyContent: \"left\",\n  item: true,\n  xs: true,\n  zeroMinWidth: true,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 32\n  },\n  __self: this\n}, React.createElement(\"h4\", {\n  className: useStyles().author,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 33\n  },\n  __self: this\n}, author), React.createElement(\"p\", {\n  className: useStyles().content,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 34\n  },\n  __self: this\n}, content), React.createElement(\"p\", {\n  className: useStyles().time,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 35\n  },\n  __self: this\n}, date))), React.createElement(Divider, {\n  variant: \"fullWidth\",\n  className: useStyles().divider,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 38\n  },\n  __self: this\n})); //create a useInput hook\n\n\nconst useInput = initialValue => {\n  const [value, setValue] = useState(initialValue);\n  return {\n    value,\n    setValue,\n    reset: () => setValue(\"\"),\n    bind: {\n      value,\n      onChange: event => {\n        setValue(event.target.value);\n      }\n    }\n  };\n}; //make CommentForm a functional component\n\n\nconst CommentForm = ({\n  addComment\n}) => {\n  const {\n    value: author,\n    bind: bindAuthor,\n    reset: resetAuthor\n  } = useInput('');\n  const {\n    value: content,\n    bind: bindContent,\n    reset: resetContent\n  } = useInput('');\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    addComment(author, content);\n    resetAuthor();\n    resetContent();\n  };\n\n  return React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, React.createElement(FormControl, {\n    color: \"primary\",\n    fullWidth: \"true\",\n    className: \"ml-2 mr-2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, React.createElement(TextField, Object.assign({\n    id: \"outlined-basic\",\n    label: \"Name\",\n    variant: \"outlined\",\n    className: \"mb-2\"\n  }, bindAuthor, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  })), React.createElement(TextField, Object.assign({\n    id: \"outlined-basic\",\n    label: \"Add a comment\",\n    variant: \"outlined\",\n    multiline: true,\n    rowsMax: 6,\n    rows: 4\n  }, bindContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  })), React.createElement(FormHelperText, {\n    id: \"my-helper-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, \" We'll never share your personal information. \"), React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    type: \"submit\",\n    onClick: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, \" SUBMIT\")));\n}; //make CommentBox a functional componet\n\n\nconst CommentBox = () => {\n  const [comments, setComments] = useState([]);\n  useEffect(() => {\n    axios.get(\"/posts\").then(response => {\n      console.log(response.data);\n      setComments(response.data);\n    }).catch(error => console.log(error));\n  });\n\n  const mapComment = comments => {\n    return comments.map(comment => {\n      return React.createElement(Comment, {\n        key: comment.id,\n        author: comment.author,\n        content: comment.content,\n        date: comment.date,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      });\n    });\n  };\n\n  const addComment = (author, content, date) => {\n    const newComment = {\n      id: comments.length + 1,\n      author,\n      content,\n      date\n    };\n    const newComments = [...comments, newComment];\n    setComments(newComments);\n  };\n\n  return React.createElement(\"div\", {\n    className: \"App ml-2 mr-2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }, \"Comments\"), React.createElement(CommentForm, {\n    addComment: addComment,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }), React.createElement(Paper, {\n    className: useStyles().paper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }, mapComment(comments)));\n};\n\nexport default CommentBox;","map":{"version":3,"sources":["/Users/ufengch/Desktop/Projects/homematcher/frontend/src/Components/CommentBox/CommentBox.js"],"names":["React","useState","useEffect","FormControl","TextField","FormHelperText","Button","Grid","Paper","Divider","makeStyles","axios","useStyles","content","textAlign","paddingLeft","author","time","color","divider","margin","paper","padding","Comment","date","useInput","initialValue","value","setValue","reset","bind","onChange","event","target","CommentForm","addComment","bindAuthor","resetAuthor","bindContent","resetContent","handleSubmit","preventDefault","CommentBox","comments","setComments","get","then","response","console","log","data","catch","error","mapComment","map","comment","id","newComment","length","newComments"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from \"react\";\nimport {FormControl,TextField,FormHelperText,Button,Grid,Paper,Divider,} from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport axios from 'axios';\n\n\n//make Comment a functional component\nconst useStyles = makeStyles({\n  content: {\n    textAlign: \"left\",\n    paddingLeft: \"2rem\",\n  },\n  author: {\n    paddingLeft: \"2rem\",\n  },\n  time: {\n    color: \"grey\",\n    textAlign: \"left\",\n    paddingLeft: \"2rem\"\n  },\n  divider: {\n    margin: \"20px\",\n  },\n  paper: {\n    padding: \"40px 20px\",\n  },\n});\n      \nconst Comment = ({ author, content, date }) => (\n  <div>\n    <Grid container wrap=\"nowrap\" spacing={2}>\n      <Grid justifyContent=\"left\" item xs zeroMinWidth>\n        <h4 className={useStyles().author}>{author}</h4>\n        <p className={useStyles().content}>{content}</p>\n        <p className={useStyles().time}>{date}</p>\n      </Grid>\n    </Grid>\n    <Divider variant=\"fullWidth\" className={useStyles().divider}/>\n  </div>\n);\n\n//create a useInput hook\nconst useInput = initialValue =>{\n  const [value, setValue] = useState(initialValue);\n\n  return {\n    value,\n    setValue,\n    reset: () => setValue(\"\"),\n    bind: {\n      value,\n      onChange: (event) => {\n        setValue(event.target.value);\n      },\n    },\n  };\n}\n\n//make CommentForm a functional component\nconst CommentForm = ({addComment})=>{\n\n  const { value:author, bind:bindAuthor, reset:resetAuthor } = useInput('');\n  const { value: content, bind: bindContent, reset: resetContent } = useInput('');\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    addComment(author, content);\n    resetAuthor();\n    resetContent();\n\n  }\n\n  return (\n    <Grid container spacing={2}>\n      <FormControl color=\"primary\" fullWidth=\"true\" className=\"ml-2 mr-2\">\n        <TextField id=\"outlined-basic\" label=\"Name\" variant=\"outlined\" className=\"mb-2\" {...bindAuthor}/>\n        <TextField id=\"outlined-basic\" label=\"Add a comment\" variant=\"outlined\" multiline rowsMax={6} rows={4} {...bindContent}  />\n        <FormHelperText id=\"my-helper-text\"> We'll never share your personal information. </FormHelperText>\n        <Button variant=\"contained\" color=\"primary\" type=\"submit\" onClick={handleSubmit}> SUBMIT</Button>\n      </FormControl>\n    </Grid>\n  );\n}\n\n//make CommentBox a functional componet\nconst CommentBox = ()=>{\n  const [comments, setComments] = useState([]);\n\n  useEffect(()=>{\n    axios.get(\"/posts\")\n      .then((response) => {\n        console.log(response.data)\n        setComments(response.data);\n      })\n      .catch(error=>console.log(error));\n  })\n\n\n  const mapComment = (comments)=>{  \n    return comments.map(comment=>{\n      return (\n        <Comment\n          key={comment.id}\n          author={comment.author}\n          content={comment.content}\n          date={comment.date}\n        />\n      );\n    })\n  }\n\n  const addComment = (author, content, date) =>{\n    const newComment = {\n      id:comments.length+1,\n      author,\n      content,\n      date\n    }\n    const newComments = [...comments, newComment];\n    setComments(newComments);\n  }\n\n  return (\n    <div className=\"App ml-2 mr-2\">\n      <h1>Comments</h1>\n      <CommentForm addComment={addComment} />\n      <Paper className={useStyles().paper}>\n        {mapComment(comments)}\n      </Paper>\n    </div>\n  );\n}\n\nexport default CommentBox;\n\n"]},"metadata":{},"sourceType":"module"}