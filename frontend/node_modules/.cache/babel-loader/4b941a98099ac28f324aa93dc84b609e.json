{"ast":null,"code":"var _jsxFileName = \"/Users/ufengch/Desktop/Projects/homematcher/frontend/src/Components/CommentBox/CommentBox.js\";\nimport React, { useState } from \"react\";\nimport { FormControl, TextField, FormHelperText, Button, Grid, Paper, Avatar, Divider } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nclass Comment extends React.Component {\n  render() {\n    const commentStyle = {\n      content: {\n        textAlign: \"left\"\n      },\n      time: {\n        color: \"grey\",\n        textAlign: \"left\"\n      },\n      divider: {\n        margin: \"20px\"\n      }\n    };\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      wrap: \"nowrap\",\n      spacing: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(Avatar, {\n      alt: this.props.author,\n      src: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      justifyContent: \"left\",\n      item: true,\n      xs: true,\n      zeroMinWidth: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, this.props.author), React.createElement(\"p\", {\n      style: commentStyle.content,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, this.props.content))), React.createElement(Divider, {\n      variant: \"fullWidth\",\n      className: \"divider\",\n      style: commentStyle.divider,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }));\n  }\n\n}\n\nclass CommentForm extends React.Component {\n  handleSubmit(event) {\n    event.preventDefault();\n    let author = this._author;\n    let content = this._content;\n    this.props.addComment(author.value, content.value);\n  }\n\n  render() {\n    return React.createElement(Grid, {\n      container: true,\n      spacing: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(FormControl, {\n      color: \"primary\",\n      fullWidth: \"true\",\n      className: \"ml-2 mr-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      id: \"outlined-basic\",\n      label: \"Name\",\n      variant: \"outlined\",\n      className: \"mb-2\",\n      inputRef: input => this._author = input,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      id: \"outlined-basic\",\n      label: \"Add a comment\",\n      variant: \"outlined\",\n      multiline: true,\n      rowsMax: 6,\n      rows: 4,\n      inputRef: textField => this._content = textField,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }), React.createElement(FormHelperText, {\n      id: \"my-helper-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, \"We'll never share your personal information.\"), React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      type: \"submit\",\n      onClick: this.handleSubmit.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, \"SUBMIT\")));\n  }\n\n}\n\nexport default class CommentBox extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      comments: []\n    };\n  }\n\n  componentDidMount() {\n    axios.get(\"/posts\").then(response => {\n      console.log(response.data);\n      this.setState(response.data);\n    }).catch(error => console.log(error));\n  }\n\n  getComments() {\n    return this.state.comments.map(comment => {\n      return React.createElement(Comment, {\n        key: comment.id,\n        author: comment.author,\n        content: comment.content,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      });\n    });\n  }\n\n  addComment(author, content) {\n    const comment = {\n      id: this.state.comments.length + 1,\n      author: author,\n      content: content\n    };\n    this.setState({\n      comments: this.state.comments.concat([comment])\n    });\n  }\n\n  render() {\n    const commentListStyle = {\n      div: {\n        padding: \"14px\"\n      },\n      paper: {\n        padding: \"40px 20px\"\n      }\n    };\n    return React.createElement(\"div\", {\n      style: commentListStyle.div,\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, \"Comments\"), React.createElement(CommentForm, {\n      addComment: this.addComment.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }), React.createElement(Paper, {\n      style: commentListStyle.paper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, this.getComments()));\n  }\n\n}","map":{"version":3,"sources":["/Users/ufengch/Desktop/Projects/homematcher/frontend/src/Components/CommentBox/CommentBox.js"],"names":["React","useState","FormControl","TextField","FormHelperText","Button","Grid","Paper","Avatar","Divider","makeStyles","Comment","Component","render","commentStyle","content","textAlign","time","color","divider","margin","props","author","CommentForm","handleSubmit","event","preventDefault","_author","_content","addComment","value","input","textField","bind","CommentBox","constructor","state","comments","componentDidMount","axios","get","then","response","console","log","data","setState","catch","error","getComments","map","comment","id","length","concat","commentListStyle","div","padding","paper"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SACEC,WADF,EAEEC,SAFF,EAGEC,cAHF,EAIEC,MAJF,EAKEC,IALF,EAMEC,KANF,EAOEC,MAPF,EAQEC,OARF,QASO,mBATP;AAWA,SAASC,UAAT,QAA2B,0BAA3B;;AAEA,MAAMC,OAAN,SAAsBX,KAAK,CAACY,SAA5B,CAAsC;AACpCC,EAAAA,MAAM,GAAG;AACP,UAAMC,YAAY,GAAG;AACnBC,MAAAA,OAAO,EAAE;AACPC,QAAAA,SAAS,EAAE;AADJ,OADU;AAInBC,MAAAA,IAAI,EAAE;AACJC,QAAAA,KAAK,EAAE,MADH;AAEJF,QAAAA,SAAS,EAAE;AAFP,OAJa;AAQnBG,MAAAA,OAAO,EAAE;AACPC,QAAAA,MAAM,EAAE;AADD;AARU,KAArB;AAaA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAM,MAAA,SAAS,MAAf;AAAgB,MAAA,IAAI,EAAC,QAArB;AAA8B,MAAA,OAAO,EAAE,CAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAQ,MAAA,GAAG,EAAE,KAAKC,KAAL,CAAWC,MAAxB;AAAgC,MAAA,GAAG,EAAC,EAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,EAIE,oBAAC,IAAD;AAAM,MAAA,cAAc,EAAC,MAArB;AAA4B,MAAA,IAAI,MAAhC;AAAiC,MAAA,EAAE,MAAnC;AAAoC,MAAA,YAAY,MAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK,KAAKD,KAAL,CAAWC,MAAhB,CADF,EAEE;AAAG,MAAA,KAAK,EAAER,YAAY,CAACC,OAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAiC,KAAKM,KAAL,CAAWN,OAA5C,CAFF,CAJF,CADF,EAUE,oBAAC,OAAD;AACE,MAAA,OAAO,EAAC,WADV;AAEE,MAAA,SAAS,EAAC,SAFZ;AAGE,MAAA,KAAK,EAAED,YAAY,CAACK,OAHtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAVF,CADF;AAkBD;;AAjCmC;;AAoCtC,MAAMI,WAAN,SAA0BvB,KAAK,CAACY,SAAhC,CAA0C;AACxCY,EAAAA,YAAY,CAACC,KAAD,EAAQ;AAClBA,IAAAA,KAAK,CAACC,cAAN;AACA,QAAIJ,MAAM,GAAG,KAAKK,OAAlB;AACA,QAAIZ,OAAO,GAAG,KAAKa,QAAnB;AACA,SAAKP,KAAL,CAAWQ,UAAX,CAAsBP,MAAM,CAACQ,KAA7B,EAAoCf,OAAO,CAACe,KAA5C;AACD;;AAEDjB,EAAAA,MAAM,GAAG;AACP,WACE,oBAAC,IAAD;AAAM,MAAA,SAAS,MAAf;AAAgB,MAAA,OAAO,EAAE,CAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,WAAD;AAAa,MAAA,KAAK,EAAC,SAAnB;AAA6B,MAAA,SAAS,EAAC,MAAvC;AAA8C,MAAA,SAAS,EAAC,WAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,SAAD;AACE,MAAA,EAAE,EAAC,gBADL;AAEE,MAAA,KAAK,EAAC,MAFR;AAGE,MAAA,OAAO,EAAC,UAHV;AAIE,MAAA,SAAS,EAAC,MAJZ;AAKE,MAAA,QAAQ,EAAGkB,KAAD,IAAY,KAAKJ,OAAL,GAAeI,KALvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAQE,oBAAC,SAAD;AACE,MAAA,EAAE,EAAC,gBADL;AAEE,MAAA,KAAK,EAAC,eAFR;AAGE,MAAA,OAAO,EAAC,UAHV;AAIE,MAAA,SAAS,MAJX;AAKE,MAAA,OAAO,EAAE,CALX;AAME,MAAA,IAAI,EAAE,CANR;AAOE,MAAA,QAAQ,EAAGC,SAAD,IAAgB,KAAKJ,QAAL,GAAgBI,SAP5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARF,EAiBE,oBAAC,cAAD;AAAgB,MAAA,EAAE,EAAC,gBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sDAjBF,EAoBE,oBAAC,MAAD;AACE,MAAA,OAAO,EAAC,WADV;AAEE,MAAA,KAAK,EAAC,SAFR;AAGE,MAAA,IAAI,EAAC,QAHP;AAIE,MAAA,OAAO,EAAE,KAAKR,YAAL,CAAkBS,IAAlB,CAAuB,IAAvB,CAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBApBF,CADF,CADF;AAiCD;;AA1CuC;;AA6C1C,eAAe,MAAMC,UAAN,SAAyBlC,KAAK,CAACY,SAA/B,CAAyC;AACtDuB,EAAAA,WAAW,GAAG;AACZ;AAEA,SAAKC,KAAL,GAAa;AACXC,MAAAA,QAAQ,EAAE;AADC,KAAb;AAGD;;AAEDC,EAAAA,iBAAiB,GAAE;AACjBC,IAAAA,KAAK,CACFC,GADH,CACO,QADP,EAEGC,IAFH,CAESC,QAAD,IAAc;AAClBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,IAArB;AACA,WAAKC,QAAL,CAAcJ,QAAQ,CAACG,IAAvB;AACD,KALH,EAMGE,KANH,CAMUC,KAAD,IAAWL,OAAO,CAACC,GAAR,CAAYI,KAAZ,CANpB;AAOD;;AAEDC,EAAAA,WAAW,GAAG;AACZ,WAAO,KAAKb,KAAL,CAAWC,QAAX,CAAoBa,GAApB,CAAyBC,OAAD,IAAa;AAC1C,aACE,oBAAC,OAAD;AACE,QAAA,GAAG,EAAEA,OAAO,CAACC,EADf;AAEE,QAAA,MAAM,EAAED,OAAO,CAAC7B,MAFlB;AAGE,QAAA,OAAO,EAAE6B,OAAO,CAACpC,OAHnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAOD,KARM,CAAP;AASD;;AAEDc,EAAAA,UAAU,CAACP,MAAD,EAASP,OAAT,EAAkB;AAC1B,UAAMoC,OAAO,GAAG;AACdC,MAAAA,EAAE,EAAE,KAAKhB,KAAL,CAAWC,QAAX,CAAoBgB,MAApB,GAA6B,CADnB;AAEd/B,MAAAA,MAAM,EAAEA,MAFM;AAGdP,MAAAA,OAAO,EAAEA;AAHK,KAAhB;AAKA,SAAK+B,QAAL,CAAc;AACZT,MAAAA,QAAQ,EAAE,KAAKD,KAAL,CAAWC,QAAX,CAAoBiB,MAApB,CAA2B,CAACH,OAAD,CAA3B;AADE,KAAd;AAGD;;AAEDtC,EAAAA,MAAM,GAAG;AACP,UAAM0C,gBAAgB,GAAG;AACvBC,MAAAA,GAAG,EAAE;AACHC,QAAAA,OAAO,EAAE;AADN,OADkB;AAIvBC,MAAAA,KAAK,EAAE;AACLD,QAAAA,OAAO,EAAE;AADJ;AAJgB,KAAzB;AAQA,WACE;AAAK,MAAA,KAAK,EAAEF,gBAAgB,CAACC,GAA7B;AAAkC,MAAA,SAAS,EAAC,KAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAEE,oBAAC,WAAD;AAAa,MAAA,UAAU,EAAE,KAAK3B,UAAL,CAAgBI,IAAhB,CAAqB,IAArB,CAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGE,oBAAC,KAAD;AAAO,MAAA,KAAK,EAAEsB,gBAAgB,CAACG,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAuC,KAAKT,WAAL,EAAvC,CAHF,CADF;AAOD;;AA1DqD","sourcesContent":["import React, { useState } from \"react\";\nimport {\n  FormControl,\n  TextField,\n  FormHelperText,\n  Button,\n  Grid,\n  Paper,\n  Avatar,\n  Divider,\n} from \"@material-ui/core\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nclass Comment extends React.Component {\n  render() {\n    const commentStyle = {\n      content: {\n        textAlign: \"left\",\n      },\n      time: {\n        color: \"grey\",\n        textAlign: \"left\",\n      },\n      divider: {\n        margin: \"20px\",\n      },\n    };\n\n    return (\n      <div>\n        <Grid container wrap=\"nowrap\" spacing={2}>\n          <Grid item>\n            <Avatar alt={this.props.author} src=\"\" />\n          </Grid>\n          <Grid justifyContent=\"left\" item xs zeroMinWidth>\n            <h4>{this.props.author}</h4>\n            <p style={commentStyle.content}>{this.props.content}</p>\n          </Grid>\n        </Grid>\n        <Divider\n          variant=\"fullWidth\"\n          className=\"divider\"\n          style={commentStyle.divider}\n        />\n      </div>\n    );\n  }\n}\n\nclass CommentForm extends React.Component {\n  handleSubmit(event) {\n    event.preventDefault();\n    let author = this._author;\n    let content = this._content;\n    this.props.addComment(author.value, content.value);\n  }\n\n  render() {\n    return (\n      <Grid container spacing={2}>\n        <FormControl color=\"primary\" fullWidth=\"true\" className=\"ml-2 mr-2\">\n          <TextField\n            id=\"outlined-basic\"\n            label=\"Name\"\n            variant=\"outlined\"\n            className=\"mb-2\"\n            inputRef={(input) => (this._author = input)}\n          />\n          <TextField\n            id=\"outlined-basic\"\n            label=\"Add a comment\"\n            variant=\"outlined\"\n            multiline\n            rowsMax={6}\n            rows={4}\n            inputRef={(textField) => (this._content = textField)}\n          />\n          <FormHelperText id=\"my-helper-text\">\n            We'll never share your personal information.\n          </FormHelperText>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            type=\"submit\"\n            onClick={this.handleSubmit.bind(this)}\n          >\n            SUBMIT\n          </Button>\n        </FormControl>\n      </Grid>\n    );\n  }\n}\n\nexport default class CommentBox extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      comments: []\n    };\n  }\n\n  componentDidMount(){\n    axios\n      .get(\"/posts\")\n      .then((response) => {\n        console.log(response.data);\n        this.setState(response.data);\n      })\n      .catch((error) => console.log(error));\n  }\n\n  getComments() {\n    return this.state.comments.map((comment) => {\n      return (\n        <Comment\n          key={comment.id}\n          author={comment.author}\n          content={comment.content}\n        />\n      );\n    });\n  }\n\n  addComment(author, content) {\n    const comment = {\n      id: this.state.comments.length + 1,\n      author: author,\n      content: content,\n    };\n    this.setState({\n      comments: this.state.comments.concat([comment]),\n    });\n  }\n\n  render() {\n    const commentListStyle = {\n      div: {\n        padding: \"14px\",\n      },\n      paper: {\n        padding: \"40px 20px\",\n      },\n    };\n    return (\n      <div style={commentListStyle.div} className=\"App\">\n        <h1>Comments</h1>\n        <CommentForm addComment={this.addComment.bind(this)} />\n        <Paper style={commentListStyle.paper}>{this.getComments()}</Paper>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}