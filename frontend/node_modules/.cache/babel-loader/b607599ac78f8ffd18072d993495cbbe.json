{"ast":null,"code":"var _jsxFileName = \"/Users/ufengch/Desktop/Projects/rating-app/src/Components/CommentBox/CommentBox.js\";\nimport React from 'react';\nimport CommentBox from 'react-commentbox';\n\nclass MyCommentBox extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      authorName: '',\n      authorNameIsSet: false\n    };\n\n    this.onChangeAuthorName = e => this.setState({\n      authorName: e.currentTarget.value\n    });\n\n    this.onSubmitAuthorName = e => {\n      e.preventDefault();\n      this.setState({\n        authorNameIsSet: true\n      });\n    };\n\n    this.getComments = () => {\n      return this.props.contentfulClient.getEntries({\n        'order': 'sys.createdAt',\n        // important for determining nested comments\n        'content_type': 'comment',\n        'fields.subject': this.props.subjectId\n      }).then(response => {\n        return response.items;\n      }).catch(console.error);\n    };\n\n    this.normalizeComment = comment => {\n      const {\n        id,\n        createdAt\n      } = comment.sys;\n      const {\n        body,\n        author,\n        parentComment\n      } = comment.fields;\n      return {\n        id,\n        bodyDisplay: body,\n        userNameDisplay: author,\n        timestampDisplay: createdAt.split('T')[0],\n        belongsToAuthor: false,\n        parentCommentId: parentComment ? parentComment.sys.id : null\n      };\n    };\n\n    this.comment = (body, parentCommentId) => {\n      return this.props.postData('/create-comment', {\n        body,\n        parentCommentId,\n        authorName: this.state.authorName,\n        subjectId: this.props.subjectId\n      });\n    };\n\n    this.disabledComponent = props => {\n      return React.createElement(\"form\", {\n        onSubmit: this.onSubmitAuthorName,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter your name to post a comment\",\n        value: this.state.authorName,\n        onChange: this.onChangeAuthorName,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, \"Submit\"));\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, \"Comments\"), React.createElement(CommentBox, {\n      disabled: !this.state.authorNameIsSet,\n      getComments: this.getComments,\n      normalizeComment: this.normalizeComment,\n      comment: this.comment,\n      disabledComponent: this.disabledComponent,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default MyCommentBox;","map":{"version":3,"sources":["/Users/ufengch/Desktop/Projects/rating-app/src/Components/CommentBox/CommentBox.js"],"names":["React","CommentBox","MyCommentBox","Component","state","authorName","authorNameIsSet","onChangeAuthorName","e","setState","currentTarget","value","onSubmitAuthorName","preventDefault","getComments","props","contentfulClient","getEntries","subjectId","then","response","items","catch","console","error","normalizeComment","comment","id","createdAt","sys","body","author","parentComment","fields","bodyDisplay","userNameDisplay","timestampDisplay","split","belongsToAuthor","parentCommentId","postData","disabledComponent","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport CommentBox from 'react-commentbox';\n\nclass MyCommentBox extends React.Component {\n\n    state = { authorName: '', authorNameIsSet: false };\n\n    onChangeAuthorName = (e) => this.setState({ authorName: e.currentTarget.value });\n\n    onSubmitAuthorName = (e) => {\n\n        e.preventDefault();\n        this.setState({ authorNameIsSet: true });\n    };\n\n    // fetch our comments from Contentful\n    getComments = () => {\n\n        return this.props.contentfulClient.getEntries({\n            'order': 'sys.createdAt', // important for determining nested comments\n            'content_type': 'comment',\n            'fields.subject': this.props.subjectId,\n        }).then(response => {\n\n            return response.items;\n\n        }).catch(console.error);\n    };\n\n    // transform Contentful entries to objects that react-commentbox expects.\n    normalizeComment = (comment) => {\n\n        const { id, createdAt } = comment.sys;\n        const { body, author, parentComment } = comment.fields;\n\n        return {\n            id,\n            bodyDisplay: body,\n            userNameDisplay: author,\n            timestampDisplay: createdAt.split('T')[0],\n            belongsToAuthor: false,\n            parentCommentId: parentComment ? parentComment.sys.id : null\n        };\n    };\n\n    // make an API call to post a comment\n    comment = (body, parentCommentId) => {\n\n        return this.props.postData('/create-comment', {\n            body,\n            parentCommentId,\n            authorName: this.state.authorName,\n            subjectId: this.props.subjectId\n        });\n    };\n\n    // will be shown when the comment box is disabled\n    disabledComponent = (props) => {\n\n        return (\n            <form onSubmit={this.onSubmitAuthorName}>\n                <input\n                    type=\"text\"\n                    placeholder=\"Enter your name to post a comment\"\n                    value={this.state.authorName}\n                    onChange={this.onChangeAuthorName}\n                />\n                <button type=\"submit\">Submit</button>\n            </form>\n        );\n    };\n\n    render() {\n\n        return (\n            <div>\n                <h2>Comments</h2>\n                <CommentBox\n                    disabled={!this.state.authorNameIsSet}\n                    getComments={this.getComments}\n                    normalizeComment={this.normalizeComment}\n                    comment={this.comment}\n                    disabledComponent={this.disabledComponent}\n                />\n            </div>\n        );\n    };\n}\n\nexport default MyCommentBox;"]},"metadata":{},"sourceType":"module"}