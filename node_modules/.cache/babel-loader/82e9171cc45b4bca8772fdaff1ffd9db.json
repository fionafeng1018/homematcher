{"ast":null,"code":"var _jsxFileName = \"/Users/ufengch/Desktop/Projects/homematcher/src/Components/CommentBox/CommentBox.js\";\nimport React from 'react';\nimport Comment from '../Comment/Comment';\nimport { FormControl, TextField, FormHelperText, Button, Grid, Paper } from \"@material-ui/core\";\n\nclass CommentForm extends React.Component {\n  handleSubmit(event) {\n    event.preventDefault();\n    let author = this._author;\n    let content = this._content;\n    this.props.addComment(author.value, content.value);\n    console.log(\"submitted\");\n  }\n\n  render() {\n    return React.createElement(Grid, {\n      container: true,\n      spacing: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, React.createElement(FormControl, {\n      color: \"primary\",\n      fullWidth: \"true\",\n      className: \"ml-2 mr-2\",\n      onSubmit: this.handleSubmit.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      id: \"outlined-basic\",\n      label: \"Name\",\n      variant: \"outlined\",\n      className: \"mb-2\",\n      ref: input => this._author = input,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      id: \"outlined-basic\",\n      label: \"Add a comment\",\n      variant: \"outlined\",\n      multiline: true,\n      rowsMax: 6,\n      rows: 4,\n      ref: input => this._content = input,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }), React.createElement(FormHelperText, {\n      id: \"my-helper-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, \"We'll never share your personal information.\"), React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      type: \"submit\",\n      onClick: this.handleSubmit.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, \"SUBMIT\")));\n  }\n\n}\n\nexport default class CommentBox extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      comments: [{\n        id: 1,\n        author: \"Fiona\",\n        content: \"A review is an evaluation of a publication, service, or company such as a movie, video game, musical composition, book; a piece of hardware like a car, home appliance, or computer; or an event or performance, such as a live music concert, play, musical theater show, dance show, or art exhibition.\"\n      }, {\n        id: 2,\n        author: \"Dan\",\n        content: \"A review is an evaluation of a publication, service, or company such as a movie, video game, musical composition, book; a piece of hardware like a car, home appliance, or computer; or an event or performance, such as a live music concert, play, musical theater show, dance show, or art exhibition.\"\n      }]\n    };\n  }\n\n  getComments() {\n    return this.state.comments.map(comment => {\n      return React.createElement(Comment, {\n        key: comment.id,\n        author: comment.author,\n        content: comment.content,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      });\n    });\n  }\n\n  addComment(author, content) {\n    const comment = {\n      id: this.state.comments.length + 1,\n      author: author,\n      content: content\n    };\n    const newCommentList = this.state.comments.push(comment);\n    this.setState({\n      comments: newCommentList\n    });\n    console.log(this.state.comments);\n  }\n\n  render() {\n    const commentListStyle = {\n      div: {\n        padding: \"14px\"\n      },\n      paper: {\n        padding: \"40px 20px\"\n      }\n    };\n    return React.createElement(\"div\", {\n      style: commentListStyle.div,\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, \"Comments\"), React.createElement(CommentForm, {\n      addComment: this.addComment.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }), React.createElement(Paper, {\n      style: commentListStyle.paper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, this.getComments()));\n  }\n\n}","map":{"version":3,"sources":["/Users/ufengch/Desktop/Projects/homematcher/src/Components/CommentBox/CommentBox.js"],"names":["React","Comment","FormControl","TextField","FormHelperText","Button","Grid","Paper","CommentForm","Component","handleSubmit","event","preventDefault","author","_author","content","_content","props","addComment","value","console","log","render","bind","input","CommentBox","constructor","state","comments","id","getComments","map","comment","length","newCommentList","push","setState","commentListStyle","div","padding","paper"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Comment from '../Comment/Comment';\nimport {\n    FormControl,\n    TextField,\n    FormHelperText,\n    Button,\n    Grid,\n    Paper\n} from \"@material-ui/core\";\n\n\n\nclass CommentForm extends React.Component{\n\n    handleSubmit(event){\n        event.preventDefault();\n        let author = this._author;\n        let content = this._content;\n        this.props.addComment(author.value,content.value);\n        console.log(\"submitted\");\n    }\n\n    render(){\n        return (\n          <Grid container spacing={2}>\n            <FormControl color=\"primary\" fullWidth=\"true\" className=\"ml-2 mr-2\" onSubmit={this.handleSubmit.bind(this)}>\n              <input\n                id=\"outlined-basic\"\n                label=\"Name\"\n                variant=\"outlined\"\n                className=\"mb-2\"\n                ref={(input) => this._author = input}\n              />\n              <input\n                id=\"outlined-basic\"\n                label=\"Add a comment\"\n                variant=\"outlined\"\n                multiline\n                rowsMax={6}\n                rows={4}\n                ref={(input) => this._content = input}\n              />\n              <FormHelperText id=\"my-helper-text\">\n                We'll never share your personal information.\n              </FormHelperText>\n              <Button variant=\"contained\" color=\"primary\" type=\"submit\" onClick={this.handleSubmit.bind(this)}>\n                SUBMIT\n              </Button>\n            </FormControl>\n          </Grid>\n        );\n    }\n}\n\nexport default class CommentBox extends React.Component{\n    constructor(){\n        super();\n\n        this.state ={\n            comments:[\n                 {\n                     id: 1,\n                     author: \"Fiona\",\n                     content: \"A review is an evaluation of a publication, service, or company such as a movie, video game, musical composition, book; a piece of hardware like a car, home appliance, or computer; or an event or performance, such as a live music concert, play, musical theater show, dance show, or art exhibition.\",\n                 }, {\n                     id: 2,\n                     author: \"Dan\",\n                     content: \"A review is an evaluation of a publication, service, or company such as a movie, video game, musical composition, book; a piece of hardware like a car, home appliance, or computer; or an event or performance, such as a live music concert, play, musical theater show, dance show, or art exhibition.\",\n                 }\n            ]\n        };\n    }\n\n    getComments(){\n        return this.state.comments.map((comment)=>{\n            return <Comment key={comment.id} author={comment.author} content={comment.content} />\n            });\n    }\n\n    addComment(author, content){\n        const comment={\n            id: this.state.comments.length+1,\n            author: author,\n            content: content\n        };\n        const newCommentList = this.state.comments.push(comment);\n        this.setState({ comments : newCommentList});\n        console.log(this.state.comments)\n    }\n\n   render() {\n        const commentListStyle = {\n          div: {\n            padding: \"14px\",\n          },\n          paper: {\n            padding: \"40px 20px\"\n          },\n        };\n        return (\n            <div style={commentListStyle.div} className=\"App\">\n            <h1>Comments</h1>\n            <CommentForm addComment={this.addComment.bind(this)}/>\n            <Paper style={commentListStyle.paper}>\n              {this.getComments()}\n            </Paper>\n          </div>\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}